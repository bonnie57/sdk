name: Publish to npm, Tag and create GH Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  Timestamp:
    uses: storyprotocol/gha-workflows/.github/workflows/reusable-timestamp.yml@main

  print_version_to_publish:
    needs: [Timestamp]
    runs-on: ubuntu-latest
    outputs:
      core_sdk_version_to_be_published: ${{ steps.get_version_to_publish.outputs.CORE_SDK_VERSION_TO_BE_PUBLISHED }}
      react_sdk_version_to_be_published: ${{ steps.get_version_to_publish.outputs.REACT_SDK_VERSION_TO_BE_PUBLISHED }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Get version to publish
        id: get_version_to_publish
        run: |
          content=$(cat packages/core-sdk/package.json)
          echo "CORE_SDK_VERSION_TO_BE_PUBLISHED=$(echo $content | jq -r '.version')" >> $GITHUB_OUTPUT
          content=$(cat packages/react-sdk/package.json)
          echo "REACT_SDK_VERSION_TO_BE_PUBLISHED=$(echo $content | jq -r '.version')" >> $GITHUB_OUTPUT

  # Fetch the latest version from NPM
  fetch_latest_version:
    needs: [Timestamp]
    runs-on: ubuntu-latest
    outputs:
      core_sdk_latest_version: ${{ steps.get_latest_version.outputs.CORE_SDK_LATEST_VERSION }}
      react_sdk_latest_version: ${{ steps.get_latest_version.outputs.REACT_SDK_LATEST_VERSION }}
    steps:
      - name: Get latest package version
        id: get_latest_version
        run: |
          CORE_SDK_LATEST_VERSION=$(npm view @story-protocol/core-sdk version --silent)
          REACT_SDK_LATEST_VERSION=$(npm view @story-protocol/react-sdk version --silent || true)
          if [ -z "$REACT_SDK_LATEST_VERSION" ]; then
            echo "@story-protocol/react-sdk package not found on NPMJS"
            REACT_SDK_LATEST_VERSION="Not_Published"
          fi
          echo "Latest version of @story-protocol/core-sdk on NPMJS is $CORE_SDK_LATEST_VERSION"
          echo "CORE_SDK_LATEST_VERSION=$CORE_SDK_LATEST_VERSION" >> $GITHUB_OUTPUT
          echo "Latest version of @story-protocol/react-sdk on NPMJS is $REACT_SDK_LATEST_VERSION"
          echo "REACT_SDK_LATEST_VERSION=$REACT_SDK_LATEST_VERSION" >> $GITHUB_OUTPUT

  # Fail the PR if the version to be published is the same as the latest version on NPM
  fail_if_version_is_same:
    needs: [print_version_to_publish, fetch_latest_version]
    runs-on: ubuntu-latest
    steps:
      - name: Fail if version is the same
        run: |
          if [ "${{ needs.fetch_latest_version.outputs.core_sdk_latest_version }}" == "${{ needs.print_version_to_publish.outputs.core_sdk_version_to_be_published }}" ]; then
            echo "The core-sdk version to be published is the same as the latest version on NPM. "
          fi
          if [ "${{ needs.fetch_latest_version.outputs.react_sdk_latest_version }}" == "${{ needs.print_version_to_publish.outputs.react_sdk_version_to_be_published }}" ]; then
            echo "The react-sdk version to be published is the same as the latest version on NPM. "
          fi
          if [ "${{ needs.fetch_latest_version.outputs.core_sdk_latest_version }}" == "${{ needs.print_version_to_publish.outputs.core_sdk_version_to_be_published }}" ] && [ "${{ needs.fetch_latest_version.outputs.react_sdk_latest_version }}" == "${{ needs.print_version_to_publish.outputs.react_sdk_version_to_be_published }}" ]; then
            echo "The core-sdk and react-sdk versions to be published are the same as the latest versions on NPM. "
            exit 1
          fi

  publish-core-sdk:
    # Skip this job if the version to be published is the same as the latest version on NPM
    # and the event triggering the workflow is a push
    if: ${{ needs.fetch_latest_version.outputs.core_sdk_latest_version != needs.print_version_to_publish.outputs.core_sdk_version_to_be_published && github.event_name == 'push'}}
    runs-on: ubuntu-latest
    steps:
      - name: Publish to npm
        run: |
          cd packages/core-sdk
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-release-core-sdk:
    needs: [publish-core-sdk]
    # Skip this job if the version to be published is the same as the latest version on NPM
    # and the event triggering the workflow is a push
    if: needs.fetch_latest_version.outputs.core_sdk_latest_version != needs.print_version_to_publish.outputs.core_sdk_version_to_be_published && github.event_name == 'push'
    uses: storyprotocol/gha-workflows/.github/workflows/reusable-create-release.yml@main
    with:
      version_to_publish: ${{ needs.print_version_to_publish.outputs.core_sdk_version_to_be_published }}

  send_slack_notif-core-sdk:
    needs: [publish-core-sdk, create-release-core-sdk]
    uses: storyprotocol/gha-workflows/.github/workflows/reusable-slack-notifs.yml@main
    with:
      short-desc: "${{ github.repository }}: Core-sdk package has been published to NPM Registry, version: ${{ needs.print_version_to_publish.outputs.core_sdk_version_to_be_published }}"
      title: "Published to Registry"
      img-url: "https://i.imgur.com/JHmKB0s.png"
      img-alt-text: "Published to Registry"
    secrets:
      channel-name: ${{ secrets.SLACK_CHANNEL_ID_STORY_57BLOCKS }}
      slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}

  publish-react-sdk:
    # Skip this job if the version to be published is the same as the latest version on NPM
    # and the event triggering the workflow is a push
    if: ${{ needs.fetch_latest_version.outputs.react_sdk_latest_version != needs.print_version_to_publish.outputs.react_sdk_version_to_be_published && github.event_name == 'push'}}
    runs-on: ubuntu-latest
    steps:
      - name: Publish to npm
        run: |
          cd packages/react-sdk
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  create-release-react-sdk:
    needs: [publish-react-sdk]
    # Skip this job if the version to be published is the same as the latest version on NPM
    # and the event triggering the workflow is a push
    if: needs.fetch_latest_version.outputs.react_sdk_latest_version != needs.print_version_to_publish.outputs.react_sdk_version_to_be_published && github.event_name == 'push'
    uses: storyprotocol/gha-workflows/.github/workflows/reusable-create-release.yml@main
    with:
      version_to_publish: ${{ needs.print_version_to_publish.outputs.react_sdk_version_to_be_published }}

  send_slack_notif-react-sdk:
    needs: [create-release-react-sdk, publish-react-sdk]
    uses: storyprotocol/gha-workflows/.github/workflows/reusable-slack-notifs.yml@main
    with:
      short-desc: "${{ github.repository }}: React-sdk package has been published to NPM Registry, version: ${{ needs.print_version_to_publish.outputs.react_sdk_version_to_be_published }}"
      title: "Published to Registry"
      img-url: "https://i.imgur.com/JHmKB0s.png"
      img-alt-text: "Published to Registry"
    secrets:
      channel-name: ${{ secrets.SLACK_CHANNEL_ID_STORY_57BLOCKS }}
      slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
