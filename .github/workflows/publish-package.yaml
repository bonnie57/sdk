name: Publish to npm, Tag and create GH Release

on:
  workflow_dispatch:
    # This allows manual triggering of the workflow

permissions:
  contents: write
  actions: write

jobs:
  timestamp:
    uses: storyprotocol/gha-workflows/.github/workflows/reusable-timestamp.yml@main

  print_version_to_publish:
    needs: [timestamp]
    runs-on: ubuntu-latest
    outputs:
      CORE_SDK_VERSION_TO_BE_PUBLISHED: ${{ steps.get_version_to_publish.outputs.CORE_SDK_VERSION_TO_BE_PUBLISHED }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Get version to publish
        id: get_version_to_publish
        run: |
          content=$(cat packages/core-sdk/package.json)
          echo "CORE_SDK_VERSION_TO_BE_PUBLISHED=$(echo $content | jq -r '.version')" >> $GITHUB_OUTPUT

  # Fetch the latest version from NPM
  fetch_latest_version:
    needs: [timestamp, print_version_to_publish]
    runs-on: ubuntu-latest
    outputs:
      CORE_SDK_LATEST_VERSION: ${{ steps.get_latest_version.outputs.CORE_SDK_LATEST_VERSION }}
    steps:
      - name: Get latest package version
        id: get_latest_version
        run: |
          CORE_SDK_LATEST_VERSION=$(npm view @story-protocol/core-sdk version --silent)
          echo "Latest version of @story-protocol/core-sdk on NPMJS is $CORE_SDK_LATEST_VERSION"
          echo "CORE_SDK_LATEST_VERSION=$CORE_SDK_LATEST_VERSION" >> $GITHUB_OUTPUT

  # Fail the PR if the version to be published is the same as the latest version on NPM
  fail_if_version_is_same:
    needs: [print_version_to_publish, fetch_latest_version]
    runs-on: ubuntu-latest
    outputs:
      IS_PUBLISH_CORE_SDK: ${{ steps.check_publish_condition.outputs.IS_PUBLISH_CORE_SDK }}
    steps:
      - name: check publish condition
        id: check_publish_condition
        run: |
          CORE_SDK_LATEST_VERSION="${{ needs.fetch_latest_version.outputs.CORE_SDK_LATEST_VERSION }}"
          CORE_SDK_VERSION_TO_BE_PUBLISHED="${{ needs.print_version_to_publish.outputs.CORE_SDK_VERSION_TO_BE_PUBLISHED }}"

          IS_PUBLISH_CORE_SDK=false

          if [ "$CORE_SDK_LATEST_VERSION" == "$CORE_SDK_VERSION_TO_BE_PUBLISHED" ]; then
            echo "The @story-protocol/core-sdk version to be published is the same as the latest version on NPM."
            exit 1
          else
            IS_PUBLISH_CORE_SDK=true
          fi

          echo "IS_PUBLISH_CORE_SDK=$IS_PUBLISH_CORE_SDK" >> $GITHUB_OUTPUT

  fetch_last_tag:
    needs: [fail_if_version_is_same]
    if: ${{ needs.fail_if_version_is_same.outputs.IS_PUBLISH_CORE_SDK == 'true' && github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    outputs:
      CORE_SDK_LATEST_TAG: ${{ steps.get_last_tag.outputs.CORE_SDK_LATEST_TAG }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Get last tag
        id: get_last_tag
        run: |
          git fetch --tags
          CORE_SDK_LATEST_TAG=$(git tag --sort=creatordate | grep -E "@story-protocol/core-sdk|core-sdk|^v[0-9]" | tail -n1)
          echo "CORE_SDK_LATEST_TAG=$CORE_SDK_LATEST_TAG" >> $GITHUB_OUTPUT
          echo "Last tag for @story-protocol/core-sdk is $CORE_SDK_LATEST_TAG"

  build-test-publish:
    needs: [fail_if_version_is_same, fetch_last_tag]
    if: ${{ needs.fail_if_version_is_same.outputs.IS_PUBLISH_CORE_SDK == 'true' && github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    environment: "odyssey"
    env:
      WALLET_PRIVATE_KEY: ${{ secrets.WALLET_PRIVATE_KEY }}
      TEST_WALLET_ADDRESS: ${{ secrets.TEST_WALLET_ADDRESS }}
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # v4.0.0
        with:
          version: 8.8.0

      - name: Setup Node.js environment
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: 20.0.0
          cache: pnpm
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Publish core-sdk package to npm
        if: ${{ github.event_name == 'workflow_dispatch' && needs.fail_if_version_is_same.outputs.IS_PUBLISH_CORE_SDK == 'true'}}
        run: |
          cd packages/core-sdk
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}