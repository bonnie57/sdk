name: Reusable workflow to create release in GitHub

on:
  workflow_call:
    inputs:
      tag_name:
        type: string
        required: true
        description: "Tag name to be published"

permissions:
  contents: write
  actions: write

jobs:
    test:
        if: github.event_name  == 'pull_request'
        runs-on: ubuntu-latest
        steps:
          # the below actions use the local state of the action. please replace `./` with `mikepenz/release-changelog-builder-action@{latest-release}`
          # Showcases how to use the action without a prior checkout
          # Since 3.2.0 the configuration can be provided within the `yml` file
          - name: "Configuration without Checkout"
            id: without_checkout
            uses: mikepenz/release-changelog-builder-action@develop
            with:
              toTag: ${{ inputs.tag_name}}
              configurationJson: |
                {
                  "template": "#{{CHANGELOG}}\n\n<details>\n<summary>Uncategorized</summary>\n\n#{{UNCATEGORIZED}}\n</details>",
                  "categories": [
                    {
                        "title": "## 🚀 Features",
                        "labels": ["feature"]
                    },
                    {
                        "title": "## 🐛 Fixes",
                        "labels": ["fix"]
                    },
                    {
                        "title": "## 🧪 Tests",
                        "labels": ["test"]
                    },
                    {
                        "title": "## 💬 Other",
                        "labels": ["other"]
                    },
                    {
                        "title": "## 📦 Dependencies",
                        "labels": ["dependencies"]
                    }
                  ]
                }
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
          - name: Echo Configuration without Checkout Changelog
            env:
              CHANGELOG: ${{ steps.without_checkout.outputs.changelog }}
            run: echo "CHANGELOG"
    
          - name: Checkout
            uses: actions/checkout@v4
            with:
              fetch-depth: 0
    
            # Showcase the most minimal configuration possible
          - name: "Minimal Configuration"
            id: minimal_release
            uses: ./
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
          - name: Echo Minimal Configuration Changelog
            env:
              CHANGELOG: ${{ steps.minimal_release.outputs.changelog }}
            run: echo "$CHANGELOG"
    
            # Showcases a more complex configuration, providing a configuration, and specifically referencing owner, repo, from and to tag
          - name: "Complex Configuration"
            id: complex_release
            uses: ./
            with:
              configuration: "configs/configuration_complex.json"
              owner: "mikepenz"
              repo: "release-changelog-builder-action"
              fromTag: "v0.0.1"
              toTag: "v0.0.3"
              token: ${{ secrets.GITHUB_TOKEN }}
    
          - name: Echo Complex Configuration Changelog
            env:
              CHANGELOG: ${{ steps.complex_release.outputs.changelog }}
            run: echo "CHANGELOG"
    
            # Showcases the capability to generate the changelog for an external repository provided
            # Showcase ability to only fetch data first, and then continue with exported data later
          - name: "External Repo Configuration Collect Report"
            id: external_changelog_collect
            uses: ./
            with:
              owner: "mikepenz"
              repo: "MaterialDrawer"
              fromTag: "core-sdk@1.2.0-rc.14"
              toTag: ${{ inputs.tag_name}}
              token: ${{ secrets.PERSONAL_TOKEN }}
              exportCache: true
              exportOnly: true
    
          - name: "External Repo Configuration"
            id: external_changelog
            uses: ./
            with:
              configuration: "configs/configuration_complex.json"
              owner: "mikepenz"
              repo: "MaterialDrawer"
              cache: ${{ steps.external_changelog_collect.outputs.cache }}
    
          - name: "External Repo Configuration Second"
            id: external_changelog_second
            uses: ./
            with:
              configurationJson: |
                {
                  "template": "#{{CHANGELOG}}",
                  "pr_template": "PR: ##{{NUMBER}}",
                  "categories": [
                    {
                        "title": "## Everything",
                        "labels": []
                    }
                  ]
                }
              owner: "mikepenz"
              repo: "MaterialDrawer"
              cache: ${{ steps.external_changelog_collect.outputs.cache }}
    
          - name: Echo External Repo Configuration Changelog
            env:
              CHANGELOG: ${{ steps.external_changelog.outputs.changelog }}
              CHANGELOG_SECOND: ${{ steps.external_changelog_second.outputs.changelog }}
            run: |
              echo "First:"
              echo "$CHANGELOG"
    
              echo "Second:"
              echo "$CHANGELOG_SECOND"

  release:
    # if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5

      - name: Retrieve Previous Tag Before Creating New Tag
        id: get_previous_tag
        run: |
          git fetch --tags
          # Get the last tag from the list of tags sorted by creation date
          LATEST_TAG=$(git tag --sort=creatordate | tail -n1)
          echo "The latest tag based on creation date is $LATEST_TAG"
          echo "fromTag=$LATEST_TAG" >> $GITHUB_ENV

      - name: Tag and Push
        id: tag_and_push
        run: |
          TAG_NAME=${{ inputs.tag_name}}
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git tag -a $TAG_NAME -m "Release $TAG_NAME"
          git push origin $TAG_NAME
          echo "toTag=$TAG_NAME" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@1eff87d3e9087a5d44e572b4c431e500dd2124f8
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: mikepenz/action-gh-release@a74c6b72af54cfa997e81df42d94703d6313a2d0 #softprops/action-gh-release
        with:
          tag_name: ${{ inputs.tag_name }}
          body: ${{ steps.build_changelog.outputs.changelog }}
