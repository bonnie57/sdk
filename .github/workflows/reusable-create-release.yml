name: Reusable workflow to create release in GitHub

on:
  workflow_call:
    inputs:
      tag_name:
        type: string
        required: true
        description: "Tag name to be published"

permissions:
  contents: write
  actions: write

jobs:
  release:
    # if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5

      - name: Retrieve Previous Tag Before Creating New Tag
        id: get_previous_tag
        run: |
          git fetch --tags
          # Get the last tag from the list of tags sorted by creation date
          LATEST_TAG=$(git tag --sort=creatordate | tail -n1)
          echo "The latest tag based on creation date is $LATEST_TAG"
          echo "fromTag=$LATEST_TAG" >> $GITHUB_ENV

      - name: Tag and Push
        id: tag_and_push
        run: |
          TAG_NAME=${{ inputs.tag_name}}
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git tag -a $TAG_NAME -m "Release $TAG_NAME"
          git push origin $TAG_NAME
          echo "toTag=$TAG_NAME" >> $GITHUB_ENV
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@a57c1b7c90e56d9c8b26a6ed5d1eed159369e117
        with:
          fromTag: "core-sdk@0.0.4"
          toTag: "core-sdk@0.0.5"
          owner: "mikepenz"
          repo: "release-changelog-builder-action"
          token: ${{ secrets.GITHUB_TOKEN }}
          configurationJson: |
            {
              "template": "#{{CHANGELOG}}",
              "categories": [
                {
                  "title": "## üöÄ Features",
                  "labels": ["feature","feat"]
                },
                {
                  "title": "## üêõ Fixes",
                  "labels": ["fix"]
                },
                {
                  "key": "tests",
                  "title": "## üß™ Tests",
                  "labels": ["test"]
                },
              ],
              "pr_template": "- #{{TITLE}}\n   - PR: ##{{NUMBER}}",
              "sort": {
                "order": "ASC",
                "on_property": "mergedAt"
              },
              "template": "#{{CHANGELOG}}\n\n<details>\n<summary>Uncategorized</summary>\n\n#{{UNCATEGORIZED}}\n</details>",
              "pr_template": "- #{{TITLE}}\n   - PR: ##{{NUMBER}}",
              "empty_template": "- no changes",
              "label_extractor": [
                {
                    "pattern": "(.) (.+)",
                    "target": "$1",
                    "flags": "gu"
                },
                {
                    "pattern": "\\[Issue\\]",
                    "on_property": "title",
                    "method": "match"
                }
                ],
              "duplicate_filter": {
                "pattern": "\\[ABC-....\\]",
                "on_property": "title",
                "method": "match"
              },
              "ignore_labels": [
                "ignore"
            ],
              "reference": {
                "pattern": ".*\\ \\#(.).*",
                "on_property": "body",
                "method": "replace",
                "target": "$1"
                },

            }
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: mikepenz/action-gh-release@v1 #softprops/action-gh-release
        with:
          tag_name: ${{ inputs.tag_name }}
          body: ${{ steps.build_changelog.outputs.changelog }}
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-b') || contains(github.ref, '-a') }}
