name: Sync Labels from Linear Issue to PR

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  sync-labels:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get associated issue number
        id: get-issue-number
        run: |
          ISSUE_NUMBERS=$(echo "${{ github.event.pull_request.body }}" | grep -oE "#[0-9]+" | tr -d "#")
          ISSUE_NUMBERS=$(echo $ISSUE_NUMBERS | tr ' ' ',')
          echo "issue_numbers=$ISSUE_NUMBERS" >> $GITHUB_ENV

      - name: Get labels from issue
        id: get_issue_labels
        uses: actions/github-script@v6
        with:
          script: |
            const issueNumbers = ${{env.issue_numbers}}.split(' ');
            console.log(`Issue numbers are ${issueNumbers}`);
            if (issueNumbers.length === 0) {
              core.setFailed("No issue numbers found in PR description.");
              return;
            }
            let allLabels = new Set();
            for (const issueNumber of issueNumbers) {
              const { data: issue } = await github.rest.issues.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNumber,
              });
              const labels = issue.labels.map(label => label.name);
              labels.forEach(label => allLabels.add(label));
            }
            const uniqueLabels = Array.from(allLabels);
            core.setOutput("labels", uniqueLabels.join(","));
            console.log(`Labels are ${uniqueLabels.join(",")}`);
            echo `labels=${uniqueLabels.join(",")}` >> $GITHUB_ENV

      - name: Apply labels to PR
        if: steps.get_issue_labels.outputs.result != ''
        uses: actions/github-script@v6
        with:
          script: |
            const labels = ${{env.labels}}.split(",");
            echo `Applying labels: ${label.split(",")}`;
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: labels,
            });
